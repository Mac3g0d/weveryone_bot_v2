package main

import (
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
	"weveryone_bot_v2/bot"
	"weveryone_bot_v2/database"
	"weveryone_bot_v2/interfaces"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func getEnv(key, defaultValue string) string {
	value := os.Getenv(key)
	if value == "" {
		return defaultValue
	}
	return value
}

// saveUser —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
func saveUser(db interfaces.Database, user *tgbotapi.User) error {
	if user == nil {
		return nil
	}
	return db.AddUser(user.ID, user.UserName)
}

// saveChat —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
func saveChat(db interfaces.Database, chat *tgbotapi.Chat) error {
	if chat == nil {
		return nil
	}

	var title string
	switch chat.Type {
	case "private":
		// –î–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		title = fmt.Sprintf("üë§ %s", chat.FirstName)
		if chat.LastName != "" {
			title += fmt.Sprintf(" %s", chat.LastName)
		}
	case "group":
		title = fmt.Sprintf("üë• %s", chat.Title)
	case "supergroup":
		title = fmt.Sprintf("üë• %s", chat.Title)
	case "channel":
		title = fmt.Sprintf("üì¢ %s", chat.Title)
	default:
		title = chat.Title
	}

	return db.AddChat(chat.ID, title)
}

func saveUserChatRelation(db interfaces.Database, user *tgbotapi.User, chat *tgbotapi.Chat) error {
	if user == nil || chat == nil {
		return nil
	}
	err := db.AddUserToChat(user.ID, chat.ID)
	// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —á–∞—Ç–µ
	if err != nil && strings.Contains(err.Error(), "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —ç—Ç–æ–º —á–∞—Ç–µ") {
		return nil
	}
	return err
}

func main() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	db, err := database.NewSQLiteDB("data/bot.db")
	if err != nil {
		log.Fatal(err)
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	botToken := getEnv("BOT_TOKEN", "5818425786:AAHU4OQYccUuhfRrJRg0UOjokjwIDDOa-jU")
	adminIDStr := getEnv("ADMIN_ID", "399040843")

	if botToken == "" || adminIDStr == "0" {
		log.Fatal("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏–ª–∏ ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
	}

	adminID, err := strconv.ParseInt(adminIDStr, 10, 64)
	if err != nil || adminID == 0 {
		log.Fatal("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ADMIN_ID –≤ —á–∏—Å–ª–æ:", err)
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
	telegramBot, err := bot.NewTelegramBot(botToken, adminID, db)
	if err != nil {
		log.Fatal(err)
	}

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	updates := telegramBot.GetUpdatesChan(u)
	log.Printf("start bot")
	for update := range updates {
		if update.InlineQuery != nil {
			telegramBot.HandleInlineQuery(update)
			continue
		}

		if update.Message != nil {
			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ
			if err := saveUser(db, update.Message.From); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %v", err)
			}
			if err := saveChat(db, update.Message.Chat); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–∞: %v", err)
			}
			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç–æ–º
			if err := saveUserChatRelation(db, update.Message.From, update.Message.Chat); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç–æ–º: %v", err)
			}

			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
			if update.Message.IsCommand() {
				telegramBot.HandleCommand(update)
			}
		}

		if update.CallbackQuery != nil {
			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ –¥–ª—è callback query
			if err := saveUser(db, update.CallbackQuery.From); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %v", err)
			}
			if err := saveChat(db, update.CallbackQuery.Message.Chat); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–∞: %v", err)
			}
			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç–æ–º
			if err := saveUserChatRelation(db, update.CallbackQuery.From, update.CallbackQuery.Message.Chat); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç–æ–º: %v", err)
			}

			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback query
			telegramBot.HandleCallbackQuery(update)
		}
	}
}
